@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@using Fluxor
@using ProjectHermes.Xipona.Frontend.Redux.ShoppingList.Actions
@using ProjectHermes.Xipona.Frontend.Redux.ShoppingList.States

@inject IState<ShoppingListState> State
@inject IDispatcher Dispatcher

<div>
    <div class="py-1 mb-1 pl-1 d-flex align-items-center section @GetBackgroundColor()" @onclick="OnSectionClicked">
        @if (Model.IsExpanded)
        {
            <i class="bi bi-chevron-down"></i>
        }
        else
        {
            <i class="bi bi-chevron-right"></i>
        }
        <div class="pl-1 name">@Model.Name</div>
    </div>
    @if (Model.IsExpanded)
    {
        <ul class="pl-3">
            @foreach (var item in Model.GetDisplayedItems(State.Value.ItemsInBasketVisible))
            {
                <Item Model="@item"></Item>
            }
        </ul>
    }
</div>

@code {
    [Parameter] public ShoppingListSection Model { get; set; }

    private void OnSectionClicked()
    {
        Dispatcher.Dispatch(new ToggleShoppingListSectionExpansionAction(Model.Id));
    }

    private string GetBackgroundColor()
    {
        if (Model.AllItemsInBasket)
            return "all-in-basket";
        if (Model.AnyItemsInBasket)
            return "some-in-basket";

        return "none-in-basket";
    }
}