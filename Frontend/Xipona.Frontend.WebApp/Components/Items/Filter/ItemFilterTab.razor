
<div>
    @*<div class="d-flex py-1">
        <div class="mr-2 align-self-center">
            Store
        </div>
        <Select Mode="tags"
                DataSource="@State.Stores.ToList()"
                TItem="Store"
                TItemValue="Guid"
                ValueName="@nameof(Store.Id)"
                LabelName="@nameof(Store.Name)"
                @ref="@storeSelectRef"></Select>
    </div>
    <div class="d-flex py-1">
        <div class="mr-2 align-self-center">
            Category
        </div>
        <Select Mode="tags"
                DataSource="@State.ItemCategories.ToList()"
                TItem="ItemCategory"
                TItemValue="Guid"
                ValueName="@nameof(ItemCategory.Id)"
                LabelName="@nameof(ItemCategory.Name)"
                @ref="@itemCategoriesSelectRef"></Select>
    </div>
    <div class="d-flex py-1">
        <div class="mr-2 align-self-center">
            Manufacturer
        </div>
        <Select Mode="tags"
                DataSource="@State.Manufacturers.ToList()"
                TItem="Manufacturer"
                TItemValue="Guid"
                ValueName="@nameof(Manufacturer.Id)"
                LabelName="@nameof(Manufacturer.Name)"
                @ref="@manufacturersSelectRef"></Select>
    </div>
    <Button @onclick="@OnLoadButtonClickedAsync">Load</Button>*@
    Coming back soon
</div>

@code {
    //[Parameter] public ItemsState State { get; set; }
    //[Parameter] public IAsyncRetryFragmentCreator FragmentCreator { get; set; }

    //private Select<Guid, Store> storeSelectRef;
    //private Select<Guid, ItemCategory> itemCategoriesSelectRef;
    //private Select<Guid, Manufacturer> manufacturersSelectRef;

    //private async Task OnLoadButtonClickedAsync()
    //{
    //    var storeIds = storeSelectRef.Values;
    //    var itemCategoryIds = itemCategoriesSelectRef.Values;
    //    var manufacturerIds = manufacturersSelectRef.Values;

    //    await loadingService.SearchItemsAsync(storeIds, itemCategoryIds, manufacturerIds, FragmentCreator, 
    //        items => State.UpdateItems(items));
    //}
}
