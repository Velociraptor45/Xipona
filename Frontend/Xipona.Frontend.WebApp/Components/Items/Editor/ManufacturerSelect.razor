@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@using Fluxor
@using ProjectHermes.Xipona.Frontend.Redux.Items.Actions.Editor.ManufacturerSelectors
@using ProjectHermes.Xipona.Frontend.Redux.Items.States
@using ProjectHermes.Xipona.Frontend.Redux.Manufacturers.States

@inject IState<ItemState> State
@inject IDispatcher Dispatcher

<div class="ml-3">
    <div class="font-weight-bold">Manufacturer</div>
    <SingleSearchSelect
        Class="mt-1 min-w-150"
        TItem="ManufacturerSearchResult"
        TValue="Guid"
        DataSource="@State.Value.Editor.ManufacturerSelector.Manufacturers"
        ValueName="@nameof(ManufacturerSearchResult.Id)"
        LabelName="@nameof(ManufacturerSearchResult.Name)"
        OnItemChanged="@OnManufacturerChanged"
        OnItemAdded="@OnNewManufacturerCreatedAsync"
        OnInputChanged="OnInputChanged"
        Placeholder="Manufacturer"
        Value="@State.Value.Editor.Item.ManufacturerId.GetValueOrDefault()"
        SearchInput="@State.Value.Editor.ManufacturerSelector.Input"
        OnDropdownClosed="OnDropdownClosed"
        AllowClear="true"
        OnClear="OnClear"
        CanAddItem="true">
    </SingleSearchSelect>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Dispatcher.Dispatch(new LoadInitialManufacturerAction());
    }

    private void OnManufacturerChanged(ManufacturerSearchResult manufacturer)
    {
        if (manufacturer is null)
            return;

        Dispatcher.Dispatch(new SelectedManufacturerChangedAction(manufacturer.Id));
    }

    private void OnNewManufacturerCreatedAsync()
    {
        Dispatcher.Dispatch(new CreateNewManufacturerAction());
    }

    private void OnInputChanged(string input)
    {
        Dispatcher.Dispatch(new ManufacturerInputChangedAction(input));
    }

    private void OnDropdownClosed()
    {
        Dispatcher.Dispatch(new ManufacturerDropdownClosedAction());
    }

    private void OnClear()
    {
        Dispatcher.Dispatch(new ClearManufacturerAction());
    }
}