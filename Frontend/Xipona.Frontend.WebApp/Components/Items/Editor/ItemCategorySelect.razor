@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@using Fluxor
@using ProjectHermes.Xipona.Frontend.Redux.ItemCategories.States
@using ProjectHermes.Xipona.Frontend.Redux.Items.Actions.Editor.ItemCategorySelectors
@using ProjectHermes.Xipona.Frontend.Redux.Items.States

@inject IState<ItemState> State
@inject IDispatcher Dispatcher

<div>
    <div class="font-weight-bold">Category</div>
    <SingleSearchSelect
        Class="mt-1 min-w-150"
        TItem="ItemCategorySearchResult"
        TValue="Guid"
        DataSource="@State.Value.Editor.ItemCategorySelector.ItemCategories"
        ValueName="@nameof(ItemCategorySearchResult.Id)"
        LabelName="@nameof(ItemCategorySearchResult.Name)"
        OnItemChanged="@OnItemCategoryChanged"
        OnItemAdded="@OnNewItemCategoryCreatedAsync"
        OnInputChanged="OnInputChanged"
        Placeholder="Item Category"
        Value="@State.Value.Editor.Item!.ItemCategoryId.GetValueOrDefault()"
        SearchInput="@State.Value.Editor.ItemCategorySelector.Input"
        OnDropdownClosed="OnDropdownClosed"
        CanAddItem="true">
    </SingleSearchSelect>
    @if(State.Value.Editor.ValidationResult.ItemCategory is not null)
    {
        <div class="validation-error-message">@State.Value.Editor.ValidationResult.ItemCategory</div>
    }
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Dispatcher.Dispatch(new LoadInitialItemCategoryAction());
    }

    private void OnItemCategoryChanged(ItemCategorySearchResult itemCategory)
    {
        Dispatcher.Dispatch(new SelectedItemCategoryChangedAction(itemCategory.Id));
    }

    private void OnNewItemCategoryCreatedAsync()
    {
        Dispatcher.Dispatch(new CreateNewItemCategoryAction());
    }

    private void OnInputChanged(string input)
    {
        Dispatcher.Dispatch(new ItemCategoryInputChangedAction(input));
    }

    private void OnDropdownClosed()
    {
        Dispatcher.Dispatch(new ItemCategoryDropdownClosedAction());
    }
}