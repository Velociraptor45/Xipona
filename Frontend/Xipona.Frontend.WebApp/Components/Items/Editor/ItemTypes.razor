@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@using Fluxor
@using ProjectHermes.Xipona.Frontend.Redux.Items.Actions.Editor
@using ProjectHermes.Xipona.Frontend.Redux.Items.States

@inject IState<ItemState> State
@inject IDispatcher Dispatcher

<div id="itemTypes">
    <div class="mt-3 d-flex justify-content-start align-items-center">
        <div class="pt-2 pb-2 mr-2 font-weight-bold">Types</div>
        <Button class="d-flex align-items-center" Size="@AntSizeLDSType.Small" OnClick="OnAddItemTypeButtonClicked">
            <i class="bi bi-plus-lg"></i>
        </Button>
    </div>
    <div class="">
        @for(int i = 0; i < State.Value.Editor.Item!.ItemTypes.Count; i++)
        {
            <ItemType Model="@State.Value.Editor.Item!.ItemTypes.ElementAt(i)"></ItemType>
            @if (i < State.Value.Editor.Item.ItemTypes.Count - 1)
            {
                <hr class="my-3"/>
            }
        }
        @if(State.Value.Editor.ValidationResult.NoTypes is not null)
        {
            <div class="validation-error-message">@State.Value.Editor.ValidationResult.NoTypes</div>
        }
    </div>
</div>

@code {
    private void OnAddItemTypeButtonClicked()
    {
        Dispatcher.Dispatch(new ItemTypeAddedAction());
    }
}
