@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@using Fluxor
@using ProjectHermes.Xipona.Frontend.Redux.Items.Actions.Editor
@using ProjectHermes.Xipona.Frontend.Redux.Items.States

@inject IState<ItemState> State
@inject IDispatcher Dispatcher

@if (State.Value.Editor.Item!.Id != Guid.Empty)
{
    <Button Danger="true"
            Class="ml-auto"
            OnClick="@OnOpenDeleteDialogButtonClicked">
        <i class="bi bi-trash"></i>
    </Button>
    <Modal Title="@($"Delete {State.Value.Editor.Item.Name}")"
           Visible="@State.Value.Editor.IsDeleteDialogOpen"
           OnCancel="OnCloseDeleteDialogButtonClicked"
           OnOk="OnDeleteButtonClicked"
           OkButtonProps="@(new ButtonProps { Danger = true })"
           ConfirmLoading="State.Value.Editor.IsDeleting"
           OkText="@($"Delete {State.Value.Editor.Item.Name}")">
        Deleting this item will remove it from all active shopping lists & recipes
    </Modal>
}

@code {
    private void OnOpenDeleteDialogButtonClicked()
    {
        Dispatcher.Dispatch(new OpenDeleteItemDialogAction());
    }

    private void OnCloseDeleteDialogButtonClicked()
    {
        Dispatcher.Dispatch(new CloseDeleteItemDialogAction(false));
    }

    private void OnDeleteButtonClicked()
    {
        Dispatcher.Dispatch(new DeleteItemAction());
    }
}
