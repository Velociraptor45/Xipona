@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@using Fluxor
@using ProjectHermes.Xipona.Frontend.Redux.Recipes.Actions.Editor
@using ProjectHermes.Xipona.Frontend.Redux.Recipes.Actions.Editor.SideDishes
@using ProjectHermes.Xipona.Frontend.Redux.Recipes.States

@inject IState<RecipeState> State
@inject IDispatcher Dispatcher

<div class="editor-content-general">
    <div class="editor-content-general-first-row">
        <div class="editor-tags">
            <div class="font-weight-bold">Tags</div>
            <MultiSelect Class="min-w-150 w-auto"
                         TItem="RecipeTag"
                         TValue="Guid"
                         DataSource="@State.Value.RecipeTags"
                         ValueName="@nameof(RecipeTag.Id)"
                         LabelName="@nameof(RecipeTag.Name)"
                         OnItemsChanged="@OnRecipeTagsChanged"
                         OnItemAdded="@OnRecipeTagCreated"
                         OnInputChanged="OnRecipeTagInputChanged"
                         Placeholder="Tags"
                         Values="@State.Value.Editor.Recipe!.RecipeTagIds"
                         SearchInput="@State.Value.Editor.RecipeTagCreateInput"
                         OnDropdownClosed="OnRecipeTagsDropdownClosed"
                         CanAddItem="true">
            </MultiSelect>
        </div>
    </div>
    <div class="editor-content-general-second-row">
        <div class="editor-number-of-servings">
            <div class="font-weight-bold">Number of Servings</div>
            <AntDesign.InputNumber Value="@State.Value.Editor.Recipe.NumberOfServings"
                                   Class="editor-number-of-servings-input"
                                   TValue="int"
                                   Step="1"
                                   Min="1"
                                   OnChange="OnNumberOfServingsChanged"></AntDesign.InputNumber>
            <span>People</span>
        </div>
        <div class="editor-side-dish">
            <div class="font-weight-bold">Side Dish</div>
            <SingleSearchSelect TItem="SideDish"
                                TValue="Guid?"
                                DataSource="@State.Value.Editor.SideDishSelector.SideDishes"
                                ValueName="@nameof(SideDish.Id)"
                                LabelName="@nameof(SideDish.Name)"
                                OnItemChanged="@OnSideDishChanged"
                                OnInputChanged="@OnSideDishInputChanged"
                                OnDropdownClosed="@OnSideDishDropdownClosed"
                                Placeholder="Side Dish"
                                Value="@State.Value.Editor.Recipe.SideDish?.Id"
                                SearchInput="@State.Value.Editor.SideDishSelector.Input">
            </SingleSearchSelect>
        </div>
    </div>
</div>

@code
{
    private void OnRecipeTagsChanged(IEnumerable<RecipeTag> tags)
    {
        Dispatcher.Dispatch(new RecipeTagsChangedAction(tags.Select(t => t.Id).ToList()));
    }

    private void OnRecipeTagCreated()
    {
        Dispatcher.Dispatch(new CreateNewRecipeTagAction());
    }

    private void OnRecipeTagInputChanged(string input)
    {
        Dispatcher.Dispatch(new RecipeTagInputChangedAction(input));
    }

    private void OnRecipeTagsDropdownClosed()
    {
        Dispatcher.Dispatch(new RecipeTagsDropdownClosedAction());
    }

    private void OnNumberOfServingsChanged(int servings)
    {
        Dispatcher.Dispatch(new RecipeNumberOfServingsChangedAction(servings));
    }

    private void OnSideDishChanged(SideDish sideDish)
    {
        Dispatcher.Dispatch(new SideDishChangedAction(sideDish));
    }

    private void OnSideDishInputChanged(string input)
    {
        Dispatcher.Dispatch(new SideDishInputChangedAction(input));
    }

    private void OnSideDishDropdownClosed()
    {
        Dispatcher.Dispatch(new SideDishDropdownClosedAction());
    }
}
