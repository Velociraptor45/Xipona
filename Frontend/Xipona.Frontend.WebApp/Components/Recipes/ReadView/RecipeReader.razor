@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@using Fluxor
@using ProjectHermes.Xipona.Frontend.Redux.Recipes.Actions.Editor
@using ProjectHermes.Xipona.Frontend.Redux.Recipes.Actions.Editor.AddToShoppingListModal
@using ProjectHermes.Xipona.Frontend.Redux.Recipes.States

@inject IState<RecipeState> State
@inject IDispatcher Dispatcher

<div class="d-flex view-top-row-parent">
    <Button Class="view-top-row-item d-flex align-items-center" OnClick="@OnBackButtonClicked">
        <i class="bi bi-arrow-left"></i>
    </Button>
    <div class="mx-3 view-name view-top-row-item">
        @State.Value.Editor.Recipe!.Name
    </div>
    <div class="align-self-center view-top-row-item">
        @foreach (var tag in State.Value.GetTagNamesFor(State.Value.Editor.Recipe.RecipeTagIds))
        {
            <span class="view-tag">@tag</span>
        }
    </div>
    <div class="align-self-center view-top-row-item number-of-servings">
        <span>@State.Value.Editor.Recipe.NumberOfServings</span>
        <span>@(State.Value.Editor.Recipe.NumberOfServings == 1 ? "Person" : "People")</span>
    </div>
    <div class="view-top-row-item d-flex ml-auto">
        @if (State.Value.Editor.Recipe.Id != Guid.Empty)
        {
            <Button Class="d-flex align-items-center mr-2"
                    OnClick="OnAddToShoppingListButtonClicked">
                <i class="bi bi-cart"></i>
            </Button>
        }
        <Button Class="d-flex align-items-center" OnClick="@OnToggleEditModeButtonClicked">
            <i class="bi bi-pencil"></i>
        </Button>
    </div>
</div>
<div class="view-main">
    <div class="view-content">
        <div class="pt-4 ingredients">
            <div class="d-flex align-items-center mb-3">
                <h4 class="mb-0 pr-2">Ingredients</h4>
            </div>
            @foreach (var ingredient in State.Value.Editor.Recipe.Ingredients)
            {
                <IngredientReader Model="@ingredient"></IngredientReader>
                <hr />
            }
        </div>
        <div class="pt-4 preparation-steps">
            <div class="d-flex align-items-center mb-3">
                <h4 class="mb-0 pr-2">Steps</h4>
            </div>
            @for (int i = 0; i < State.Value.Editor.Recipe.PreparationSteps.Count; i++)
            {
                <div class="d-flex align-items-center">
                    <div class="pr-2 preparation-step-number">@(i + 1)</div>
                    <div class="pl-2">@State.Value.Editor.Recipe.PreparationSteps.ElementAt(i).Name</div>
                </div>
                <hr />
            }
        </div>
    </div>
</div>

@code {
    private void OnBackButtonClicked()
    {
        Dispatcher.Dispatch(new LeaveRecipeEditorAction(false));
    }

    private void OnToggleEditModeButtonClicked()
    {
        Dispatcher.Dispatch(new ToggleEditModeAction());
    }

    private void OnAddToShoppingListButtonClicked()
    {
        Dispatcher.Dispatch(new LoadAddToShoppingListAction());
    }
}
