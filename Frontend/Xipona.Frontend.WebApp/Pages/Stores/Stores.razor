@page "/stores"

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@using Fluxor
@using ProjectHermes.Xipona.Frontend.Redux.Stores.Actions
@using ProjectHermes.Xipona.Frontend.Redux.Stores.Actions.Editor
@using ProjectHermes.Xipona.Frontend.Redux.Stores.States

@inject IDispatcher Dispatcher
@inject IState<StoreState> State

@namespace ProjectHermes.Xipona.Frontend.WebApp.Pages.Stores

<div class="stores-search pt-2">
    <div class="d-flex mb-2">
        <Button @onclick="@OnCreateStoreButtonClicked" Class="d-flex align-items-center ml-auto"
                Type="@ButtonType.Primary">
            <i class="bi bi-plus-lg"></i>
        </Button>
    </div>
    <div>
        <ol class="pl-0">
            @foreach (var searchResult in State.Value.SearchResults)
            {
                <SearchResult Model="searchResult" TAction="EditStoreAction"
                              IsLastItem="State.Value.SearchResults.Last() == searchResult">
                </SearchResult>
            }
        </ol>
    </div>
</div>

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();
        Dispatcher.Dispatch(new StorePageInitializedAction());
        Dispatcher.Dispatch(new LoadStoresOverviewAction());
    }

    private void OnCreateStoreButtonClicked()
    {
        Dispatcher.Dispatch(new EditStoreAction
        {
            Id = Guid.Empty
        });
    }
}