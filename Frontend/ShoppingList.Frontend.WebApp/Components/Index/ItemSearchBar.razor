@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@using System.Threading
@using Fluxor
@using ProjectHermes.ShoppingList.Frontend.Redux.Shared.States
@using ProjectHermes.ShoppingList.Frontend.Redux.ShoppingList.Actions.SearchBar
@using ProjectHermes.ShoppingList.Frontend.Redux.ShoppingList.States

@inject IState<ShoppingListState> State
@inject IState<SharedState> SharedState
@inject IDispatcher Dispatcher

<div class="d-flex">
    <Select Class="mr-1 cursor-text"
            Placeholder="Search for item"
            ValueName="@nameof(SearchItemForShoppingListResult.SelectIdentifier)"
            LabelName="@nameof(SearchItemForShoppingListResult.DisplayValue)"
            DataSource="State.Value.SearchBar.Results"
            TItem="SearchItemForShoppingListResult"
            TItemValue="string"
            OnSelectedItemChanged="OnSearchItemSelectedAsync"
            EnableSearch
            Value="State.Value.SearchBar.Input"
            Disabled="@(!SharedState.Value.IsOnline)"
            OnSearch="OnSearchInputChanged">
    </Select>
    <TemporaryItemCreator></TemporaryItemCreator>
</div>

@code {
    private void OnSearchInputChanged(string input)
    {
        Dispatcher.Dispatch(new ItemForShoppingListSearchInputChangedAction(input));
    }

    private void OnSearchItemSelectedAsync(SearchItemForShoppingListResult item)
    {
        if (item == null)
            return;

        Dispatcher.Dispatch(new ItemForShoppingListSearchResultSelectedAction(item));
    }
}