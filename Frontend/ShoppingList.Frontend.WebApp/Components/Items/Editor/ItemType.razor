@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@using Fluxor
@using ProjectHermes.ShoppingList.Frontend.Redux.Items.Actions.Editor
@using ProjectHermes.ShoppingList.Frontend.Redux.Items.States

@inject IState<ItemState> State
@inject IDispatcher Dispatcher

<div class="itemType mt-2">
    <div class="d-flex">
        <div class="name">
            <Input TValue="string" Value="@Model.Name"
                   ValueChanged="OnNameChanged" Placeholder="Type name ..."></Input>
            @if(State.Value.Editor.ValidationResult.TypeNames.ContainsKey(Model.Key))
            {
                <div class="validation-error-message">@State.Value.Editor.ValidationResult.TypeNames[Model.Key]</div>
            }
        </div>
        <div class="ml-2 ml-auto">
            <Button Class="d-flex align-items-center"
                    OnClick="@OnRemoveItemTypeButtonClicked"
                    Danger="true">
                <i class="bi bi-dash-lg"></i>
            </Button>
        </div>
    </div>
    <div class="availabilities ml-4">
        <Availabilities Available="@Model"></Availabilities>
    </div>
</div>

@code {
    [Parameter] public EditedItemType Model { get; set; }

    private void OnNameChanged(string name)
    {
        Dispatcher.Dispatch(new ItemTypeNameChangedAction(Model, name));
    }

    private void OnRemoveItemTypeButtonClicked()
    {
        Dispatcher.Dispatch(new ItemTypeRemovedAction(Model));
    }
}
