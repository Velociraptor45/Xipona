@page "/manufacturers"

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@using Fluxor
@using ProjectHermes.ShoppingList.Frontend.Redux.Manufacturers.Actions
@using ProjectHermes.ShoppingList.Frontend.Redux.Manufacturers.States

@inject IState<ManufacturerState> State
@inject IDispatcher Dispatcher

@namespace ProjectHermes.ShoppingList.Frontend.WebApp.Pages.Manufacturers

<div class="manufacturers">
    <div class="d-flex mt-2 top-bar">
        <div class="d-flex search-bar">
            <Input TValue="string"
                   OnInput="OnInputChanged"
                   Value="@State.Value.Search.Input"
                   @ref="_searchInput"
                   OnPressEnter="@OnLoadButtonClicked"
                   Placeholder="Manufacturer name"></Input>
            <Button @onclick="@OnLoadButtonClicked" Class="ml-1 mr-4">
                <i class="bi bi-search"></i>
            </Button>
        </div>
        <Button @onclick="@OnCreateManufacturerButtonClicked" Class="d-flex align-items-center ml-auto"
                Type="@ButtonType.Primary">
            <i class="bi bi-plus-lg"></i>
        </Button>
    </div>
    <div class="mt-2">
        @if (@State.Value.Search.TriggeredAtLeastOnce && State.Value.Search.SearchResults.Count == 0)
        {
            <div class="no-manufacturers-found-notice">
                No manufacturers found
            </div>
        }
        @foreach (var searchResult in State.Value.Search.SearchResults)
        {
            <SearchResult Model="searchResult" TAction="EditManufacturerAction"></SearchResult>
        }
    </div>
</div>

@code {
    private Input<string> _searchInput;

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (firstRender)
            _searchInput.Focus();
    }

    private void OnInputChanged(ChangeEventArgs args)
    {
        var input = args.Value?.ToString() ?? string.Empty;
        Dispatcher.Dispatch(new ManufacturerSearchInputChangedAction(input));
    }
    
    private void OnLoadButtonClicked()
    {
        Dispatcher.Dispatch(new SearchManufacturersAction());
    }

    private void OnCreateManufacturerButtonClicked()
    {
        Dispatcher.Dispatch(new EditManufacturerAction
        {
            Id = Guid.Empty
        });
    }
}