name: Build
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      Semver: ${{ steps.gitversion.outputs.semver }}
    steps:
      - name: Set up .net 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          java-version: '20'
          distribution: 'oracle'
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'

      - name: Determine Git Version
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml
      - name: Output Git Version
        id: gitversion
        run: echo "semver=${{ env.GITVERSION_SEMVER }}" >> "$GITHUB_OUTPUT"
      - name: Add Git Tag
        if: github.ref == 'refs/heads/main'
        run: |
          git tag v${{ env.GITVERSION_SEMVER }}
          git push --tags

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Install SonarCloud scanners
        run: |
          dotnet tool install --global dotnet-sonarscanner
      - name: Restore
        run: |
          dotnet restore Api/ShoppingListApi.sln
          dotnet restore Frontend/ShoppingList.Frontend.sln
      - name: Begin Sonar scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"Velociraptor45_ProjectHermes-ShoppingList" /o:"velociraptor45" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.exclusions=**/*TestTools*/**,**/Migrations/**,**/*.razor /d:sonar.cs.opencover.reportsPaths=Api/TestResults/coverage.opencover.xml,Frontend/TestResults/coverage.opencover.xml
      - name: Build Backend
        run: |
          dotnet build Api/ShoppingListApi.sln --configuration Release
      - name: Build Frontend
        run: |
          dotnet build Frontend/ShoppingList.Frontend.sln --configuration Release
      - name: Test
        run: |
          dotnet test ./Api/ShoppingListApi.sln --configuration Release --logger:trx --results-directory TestResults "/p:CollectCoverage=true" "/p:CoverletOutput=../TestResults/" "/p:MergeWith=../TestResults/coverage.json" "/p:CoverletOutputFormat=\"json,opencover\""
          dotnet test ./Frontend/ShoppingList.Frontend.sln --configuration Release --logger:trx --results-directory TestResults "/p:CollectCoverage=true" "/p:CoverletOutput=../TestResults/" "/p:MergeWith=../TestResults/coverage.json" "/p:CoverletOutputFormat=\"json,opencover\""
      - name: End Sonar scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  docker-image-api:
    name: Docker Image Api
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Api
          file: ./Api/Dockerfile
          push: true
          tags: velocir4ptor/ph-shoppinglist-api:${{ needs.build.outputs.Semver }}

  docker-image-frontend:
    name: Docker Image Frontend
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Frontend
          file: ./Frontend/Dockerfile
          push: true
          tags: velocir4ptor/ph-shoppinglist-frontend:${{ needs.build.outputs.Semver }}
      